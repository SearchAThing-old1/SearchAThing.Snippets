<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>dppc</Title>
      <Shortcut>dppc</Shortcut>
      <Description>Dependency property with OnPropertyChanged handler</Description>
      <Author>Lorenzo Delana &lt;oss.devel@searchathing.com&gt;</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="false">
          <ID>classname</ID>
          <ToolTip>Class name</ToolTip>
          <Function>ClassName()</Function>
          <Default>ClassNamePlaceholder</Default>
        </Literal>
        <Literal>
          <ID>type</ID>
          <ToolTip>Property type</ToolTip>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>property</ID>
          <ToolTip>Property name</ToolTip>
          <Default>MyProperty</Default>
        </Literal>
        <Literal>
          <ID>defaultValue</ID>
          <ToolTip>Default value</ToolTip>
          <Default>null</Default>
        </Literal>
      </Declarations>
      <Code Language="csharp">
        <![CDATA[#region $property$ [dppc]
        public static readonly DependencyProperty $property$Property =
          DependencyProperty.Register("$property$", typeof($type$), typeof($classname$), new FrameworkPropertyMetadata($defaultValue$, On$property$Changed));
			
        public $type$ $property$
        {
          get
          {
            return ($type$)GetValue($property$Property);
          }
          set
          {
            SetValue($property$Property, value);
          }
        }
        
        static void On$property$Changed(DependencyObject source, DependencyPropertyChangedEventArgs e)
        {
          var obj = ($classname$)source;
        }
        #endregion
			$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>